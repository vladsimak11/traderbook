{"version":3,"file":"static/js/906.e04bc306.chunk.js","mappings":"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","sources":["components/DataList/DataList.styled.js","redux/coins/selectors.js","components/DataList/DataList.jsx","components/DataForm/DataForm.styled.js","components/DataForm/DataForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Coins/Coins.styled.js","pages/Coins/Coins.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Table = styled.table`\n  margin-top: 40px;\n  border-collapse: collapse;\n  width: 100%;\n  margin: 25px 0;\n  font-family: sans-serif;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n`;\n\nexport const TheadTr = styled.tr`\n  background-color: var(--dark-blue);\n  color: #ffffff;\n  text-align: center;\n`;\n\nexport const Th = styled.th`\n  padding: 12px 15px;\n  text-align: center;\n\n  @media screen and (max-width: 480px) {\n    display: ${props => props.mobile && \"none\"};\n    padding: 8px 12px;\n  }\n`;\n\nexport const Td = styled.td`\n  padding: 12px 15px;\n  text-align: center;\n\n  @media screen and (max-width: 480px) {\n    display: ${props => props.mobile && \"none\"};\n    padding: 6px 8px;\n    font-size: 14px;\n  }\n`;\n\nexport const TdDate = styled.td`\n  color: var(--light-yellow);\n  font-weight: 600;\n  text-align: center;\n  \n  @media screen and (max-width: 480px) {\n    display: ${props => props.mobile && \"none\"};\n  }\n`;\n\nexport const TbodyTr = styled.tr`\n  border-bottom: 1px solid #dddddd;\n  color: ${props => props.type === \"SELL\" ? \"red\" : \"green\"};\n\n  &:nth-of-type(even) {\n    background-color: #f3f3f3;\n  }\n\n  &:last-of-type {\n    border-bottom: 2px solid var(--dark-blue);\n  }\n`;\n\n// export const TfootTr = styled.tr`\n  \n// `;\n\n// export const TfootTd = styled.td`\n//     padding: 12px 15px;\n//   text-align: center;\n// `;\n\nexport const DeleteButton = styled.button`\n  background-color: var(--light-red);\n  color: white;\n  border-radius: 5px;\n  text-align: center;\n  padding: 7px;\n  border: none;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #da0505;\n  }\n\n`;\n","export const getCoins = state => state.coins.items;\n\nexport const getIsLoading = state => state.coins.isLoading;\n\nexport const getError = state => state.coins.error;\n\nexport const getFilterValue = state => state.filter.filter;\n","import { Table, TheadTr, TbodyTr, Th, Td, TdDate, DeleteButton,} from './DataList.styled';\nimport { deleteCoin } from '../../redux/coins/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCoins, getFilterValue } from '../../redux/coins/selectors';\n// import { getExchange } from '../../redux/exchange/selectors';\nimport { format } from 'date-fns';\n\n\nconst formatDate = (date) => format(new Date(date), 'dd/MM/yyyy HH:mm:ss');\n\nexport const DataList = () => {\n  const dispatch = useDispatch();\n  const coins = useSelector(getCoins);\n  const filterValue = useSelector(getFilterValue);\n  // const exchangeValue = useSelector(getExchange);\n\n  const getVisibleData = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return coins.filter(value =>\n      value.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleData = getVisibleData();\n\n  // const getTotalNumber = (data, columnName) => {\n  //   return data.reduce((accumulator, currentValue) => accumulator + Number(currentValue[columnName]), 0)\n  // }\n\n  return (\n    <Table>\n      <thead>\n        <TheadTr>\n          <Th mobile>Exchange</Th>\n\n          <Th>Name</Th>\n\n          <Th>Quantity</Th>\n\n          <Th mobile>Commission</Th>\n\n          <Th>Entry</Th>\n\n          <Th mobile>Sum, USDT</Th>\n\n          <Th>Action</Th>\n\n          <Th mobile>Date</Th>\n        </TheadTr>\n      </thead>\n        \n      <tbody>\n\n        {visibleData\n          .sort((a, b) => a.name.localeCompare(b.name))\n          .map(({ _id, exchange, name, quantity, commission, entry, sum, type, \n            createdAt, }) => {\n              console.log(createdAt);\n          return (\n            <TbodyTr key={_id} type = {type}>\n              <Td mobile>{exchange}</Td>\n              <Td>{name}</Td>\n              <Td>{quantity}</Td>\n              <Td mobile>{commission}</Td>\n              <Td>{entry}</Td>\n              <Td mobile>{sum}</Td>\n              <Td>\n                <DeleteButton onClick={() => dispatch(deleteCoin(_id))}>X</DeleteButton>\n              </Td>\n\n              <TdDate mobile>{formatDate(createdAt)}</TdDate>\n      \n            </TbodyTr>\n          );\n        })}\n      </tbody>\n      {/* <tfoot>\n        <TfootTr>\n          <TfootTd><strong>Total:</strong></TfootTd>\n          <TfootTd>{getTotalNumber(visibleData, 'quantity')}</TfootTd>\n          <TfootTd>{getTotalNumber(visibleData, 'commission')}</TfootTd>\n          <TfootTd></TfootTd>\n          <TfootTd>{getTotalNumber(visibleData, 'sum')}</TfootTd>\n          <TfootTd></TfootTd>\n        </TfootTr>\n      </tfoot> */}\n    </Table>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 480px) {\n    margin-bottom: 25px;\n\n  }\n`;\n\nexport const FormBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n  }\n`;\n\nexport const Block = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  color: var(--light-yellow);;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  background-color: var(--dark-gray);\n  border: 2px solid var(--dark-blue);\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  color: var(--dark-blue);\n\n  @media screen and (max-width: 768px) {\n    width: 100px;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 190px;\n  }\n\n`;\n\nexport const Select = styled.select`\n  background-color: var(--dark-gray);\n  border: 2px solid var(--dark-blue);\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  color: var(--dark-blue);\n\n  @media screen and (max-width: 768px) {\n    width: 100px;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 190px;\n  }\n\n`;\n\nexport const ButtonBlock  = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n  background-color: ${props => props.buy ? \"var(--light-green)\" : \"#da0505\"};\n  color: white;\n  font-size: 22px;\n  padding: 5px 20px 5px 20px;\n  border: 2px solid transparent;\n  border-radius: 5px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n","import { addCoin } from '../../redux/coins/operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport {\n  Form,\n  FormBlock,\n  Block,\n  Label,\n  Input,\n  Select,\n  ButtonBlock,\n  Button,\n} from './DataForm.styled';\n\nconst allCoins = ['BTC', 'ETH', 'LTC', 'DOGE', 'TRX'];\nconst allExchanges = [\n  'Binance', \n  'Bybit', \n  'OKX', \n  'Kraken', \n  'KuCoin',\n  'Gate',\n  'HTX',\n  'MEXC',\n  'Bitget',\n  'BingX',\n  'CoinW',\n  'WhiteBit',\n];\n\n\nexport const DataForm = () => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState('BUY');\n  const [selectedCoin, setSelectedCoin] = useState('BTC');\n  const [selectedExchange, setSelectedExchange] = useState('Binance');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n\n    const coinValue = {\n      // exchange: form.elements.exchange.value,\n      exchange: selectedExchange,\n      // name: form.elements.name.value,\n      name: selectedCoin,\n      quantity: form.elements.quantity.value,\n      commission: form.elements.commission.value,\n      entry: form.elements.entry.value,\n      sum: form.elements.sum.value,\n      type: type,\n    };\n\n    dispatch(addCoin(coinValue));\n\n    form.reset();\n  };\n\n  const handleSelectCoin = (event) => {\n    setSelectedCoin(event.target.value);\n  };\n\n  const handleSelectExchange = (event) => {\n    setSelectedExchange(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormBlock>\n        {/* <Block>\n          <Label>Exchange</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter name exchange\"\n            name=\"exchange\"\n            required\n          />\n        </Block> */}\n\n       <Block>\n          <Label>Exchange</Label>\n          <Select \n            name=\"exchange\" \n            value={selectedExchange} \n            onChange={handleSelectExchange} \n            required\n          >\n            {allExchanges.map(exchange => (\n              <option key={exchange} value={exchange}>\n                {exchange}\n              </option>\n            ))}\n          </Select>\n        </Block>\n\n        {/* <Block>\n          <Label>Name Coin</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter name coin\"\n            name=\"name\"\n            required\n          />\n        </Block> */}\n\n        <Block>\n          <Label>Name Coin</Label>\n          <Select \n            name=\"name\" \n            value={selectedCoin} \n            onChange={handleSelectCoin} \n            required\n          >\n            {allCoins.map(coin => (\n              <option key={coin} value={coin}>\n                {coin}\n              </option>\n            ))}\n          </Select>\n        </Block>\n\n        <Block>\n          <Label>Quantity</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter quantity coins\"\n            name=\"quantity\"\n            required\n          />\n        </Block>\n\n        <Block>\n          <Label>Commission</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter commission\"\n            name=\"commission\"\n            required\n          />\n        </Block>\n\n        <Block>\n          <Label>Entry Point</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter entry point\"\n            name=\"entry\"\n            required\n          />\n        </Block>\n\n        <Block>\n          <Label>Sum</Label>\n          <Input type=\"text\" placeholder=\"Enter sum\" name=\"sum\" required />\n        </Block>\n      </FormBlock>\n        <ButtonBlock>\n          <Button type=\"submit\" onClick={() => setType('BUY')} buy>BUY</Button>\n          <Button type=\"submit\" onClick={() => setType('SELL')}>SELL</Button>\n        </ButtonBlock>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n\nexport const Label = styled.label`\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 450px;\n  height: 25px;\n  border: 2px solid #c1c1c1;\n  padding: 5px 0px 5px 10px;\n  outline: none;\n  margin-left: 10px;\n\n  &:focus {\n    border: 2px solid #2EE59D;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 280px;\n    margin-top: 10px;\n  }\n`;\n","import { FilterBlock, Label, Input } from './Filter.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from '../../redux/coins/selectors';\nimport { filterCoins } from '../../redux/coins/filterSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(filterCoins(event.target.value));\n  };\n\n  return (\n    <FilterBlock>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          placeholder=\"Enter name coin\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={handleFilter}\n        />\n      </Label>\n    </FilterBlock>\n  )\n};\n","import styled from 'styled-components';\n\nexport const Header1= styled.h1`\n  text-align: center;\n  margin-bottom: 25px;\n\n  @media screen and (max-width: 480px) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Header2= styled.h2`\n  text-align: center;\n  margin-bottom: 25px;\n`;\n\nexport const MainBlock= styled.div`\n  width: 1080px;\n  max-height: 630px; \n  overflow-y: auto; \n  background-color: #EDEDED;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-bottom: 8px solid var(--light-green);\n  border-radius: 10px;\n  margin-top: 30px;\n\n  @media screen and (max-width: 480px) {\n    padding: 5px;\n    width: 300px;\n    max-height: 550px;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 700px;\n    max-height: 500px;\n  }\n`;\n","import { DataList } from '../../components/DataList/DataList';\nimport { DataForm } from '../../components/DataForm/DataForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { fetchCoins } from \"../../redux/coins/operations\";\n\nimport {  getIsLoading } from \"../../redux/coins/selectors\";\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {ThreeDots} from '../../Loader/Loader';\n\nimport { Header1, Header2, MainBlock} from './Coins.styled';\n\nexport default function Coins() {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);  \n\n  useEffect(() => { \n    dispatch(fetchCoins()); \n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Traderbook</title>\n      </Helmet>\n        <MainBlock>\n          <Header1>Traderbook</Header1>\n          <DataForm />\n          <div>{isLoading && <ThreeDots />}</div>\n          <Header2>List Coins</Header2>\n          <Filter />\n          <DataList />\n        </MainBlock>\n    </>\n  );\n}"],"names":["Table","styled","TheadTr","Th","props","mobile","Td","TdDate","TbodyTr","type","DeleteButton","getCoins","state","coins","items","getIsLoading","isLoading","getFilterValue","filter","DataList","dispatch","useDispatch","useSelector","filterValue","visibleData","normalizedFilter","toLowerCase","value","name","includes","getVisibleData","sort","a","b","localeCompare","map","date","_id","exchange","quantity","commission","entry","sum","createdAt","console","log","onClick","deleteCoin","format","Date","Form","FormBlock","Block","Label","Input","Select","ButtonBlock","Button","buy","allCoins","allExchanges","DataForm","useState","setType","selectedCoin","setSelectedCoin","selectedExchange","setSelectedExchange","onSubmit","event","preventDefault","form","target","coinValue","elements","addCoin","reset","onChange","required","coin","placeholder","FilterBlock","Filter","filterCoins","Header1","Header2","MainBlock","Coins","useEffect","fetchCoins","Helmet"],"sourceRoot":""}